@model Product
@{
    ViewData["Title"] = "Edit Product";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="height:50px"></div>

@using (Html.BeginForm("EditProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="ProductID" value="@Model.Key" />
    <div class="container">
        <div class="card shadow">
            <div class="card-header py-3">
                <p class="text-primary m-0 font-weight-bold">Edit Product</p>
            </div>
            <div class="card-body">
                @await Html.PartialAsync("~/Views/Shared/ErrorAlert.cshtml")
                @await Html.PartialAsync("~/Views/Shared/SuccessAlert.cshtml")
                <h4>Product Details</h4>
                <hr />
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Product Name</label>
                            <input type="text" value="@Model.Name" class="form-control" maxlength="100" placeholder="Product Name" name="Name" required />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Product Category</label>
                            <select class="form-control" name="Category" required>
                                @foreach (ProductDepartment ProductDepartment in ((List<ProductDepartment>)ViewBag.Departments).OrderBy(D => D.Description))
                                {
                                    @foreach (ProductCategory ProductCategory in ProductDepartment.ProductCategories.OrderBy(C => C.Description))
                                    {
                                        <option value="@ProductCategory.Key">@ProductDepartment.Description - @ProductCategory.Description</option>
                                    }}
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Product Price</label>
                            <input type="number" value="@Convert.ToInt32(Model.Price)" class="form-control" min="0" max="9999999" name="Price" onkeyup="this.value=(Math.round(this.value))" required />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Quantity</label>
                            <input type="number" min="1" max="100" class="form-control" value="@Model.Quantity" name="Quantity" onkeyup="this.value=(Math.round(this.value))" required />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Brand</label>
                            <input type="text" minlength="1" maxlength="100" class="form-control" value="@Model.Brand" placeholder="Brand" name="Brand" required />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Color</label>
                            <input type="text" minlength="1" maxlength="100" class="form-control" value="@Model.Color" placeholder="Color" name="Color" required />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Featured</label>
                            @{
                                List<SelectListItem> Options = new List<SelectListItem>();
                                if (Model.Featured)
                                {
                                    Options.Add(new SelectListItem() { Value = "1", Text = "Yes" });
                                    Options.Add(new SelectListItem() { Value = "0", Text = "No" });
                                }
                                else
                                {
                                    Options.Add(new SelectListItem() { Value = "0", Text = "No" });
                                    Options.Add(new SelectListItem() { Value = "1", Text = "Yes" });
                                }
                            }
                            @Html.DropDownList("Featured", Options, new { required = "required", @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label>Product Description</label>
                        <textarea class="form-control" placeholder="Description" name="Description" required>@Model.Description</textarea>
                    </div>
                </div>
                <br />
                <h4>Shipping Details</h4>
                <hr />
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Weight in Grams (g)</label>
                            <input type="number" class="form-control" min="0" max="9999999" value="@Model.Weight" placeholder="Product Weight in Grams" name="Weight" onkeyup="this.value=(Math.round(this.value))" required />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Height in Millimeters (mm)</label>
                            <input type="number" class="form-control" min="0" max="9999999" value="@Model.Height" placeholder="Product Height in Millimeters" name="Height" onkeyup="this.value=(Math.round(this.value))" required />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Width in Millimeters (mm)</label>
                            <input type="number" class="form-control" min="0" max="9999999" value="@Model.Width" placeholder="Product Width in Millimeters" name="Width" onkeyup="this.value=(Math.round(this.value))" required />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Depth in Millimeters (mm)</label>
                            <input type="number" class="form-control" min="0" max="9999999" value="@Model.Depth" placeholder="Product Depth in Millimeters" name="Depth" onkeyup="this.value=(Math.round(this.value))" required />
                        </div>
                    </div>
                </div>
                <br />
                <h4>Product Specifications</h4>
                <hr />
                <div id="ProductSpecifications">
                    @{
                        int SpecificationCounter = 0;
                    }

                    @foreach (ProductSpecification Specification in Model.Specifications)
                    {
                        <div class="row" id="SpecificationRow_@SpecificationCounter">
                            <input type="hidden" name="ProductSpecificationID_@SpecificationCounter" id="ProductSpecificationID_@SpecificationCounter" value="@Specification.Key">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Name</label>
                                    <input type="text" class="form-control" name="SpecificationName_@SpecificationCounter" value="@Specification.Description" placeholder="Name" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Value</label>
                                    <input type="text" class="form-control" name="SpecificationValue_@SpecificationCounter" value="@Specification.Value" placeholder="Value" required />
                                </div>
                            </div>
                        </div>
                        SpecificationCounter++;
                    }
                    <input type="hidden" id="SpecificationCount" name="SpecificationCount" value=@(SpecificationCounter-1) />
                    <input type="hidden" id="RemovedSpecifications" name="RemovedSpecifications" value="" />
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <button type="button" onclick="AddSpecification()" class="btn btn-sm btn-primary mt-1 w-100">Add Specification <i class="fa fa-plus"></i></button>
                    </div>
                    <div class="col-md-4">
                    </div>
                    <div class="col-md-4">
                        <button type="button" onclick="RemoveSpecification()" class="btn btn-sm btn-danger mt-1 w-100">Remove Specification <i class="fa fa-trash"></i></button>
                    </div>
                </div>
                <hr />
                <h4>Product Images</h4>
                <br />
                @{
                    List<ProductImage> ProductImages = Model.Images;
                }
                <input type="hidden" id="RemovedImages" name="RemovedImages" value="" />
                <div class="row mt-3">
                    <div class="col-md-3">
                        <div style="min-height:150px;min-height:150px;max-height:150px;max-width:150px;">
                            @if (ProductImages.Count > 0)
                            {
                                <input type="hidden" name="Image1ID" id="Image1ID" value="@ProductImages.Where(P => P.Order == 1).First().Key">
                                <img src="data:image/bmp;base64,@Convert.ToBase64String(ProductImages.Where(P => P.Order == 1).First().Data)" id="Image1Preview" style="height:150px;" class="img-fluid m-2" />
                            }
                            else
                            {
                                <input type="hidden" name="Image1ID" id="Image1ID" value="">
                                <img src="~/img/Placeholder.png" id="Image1Preview" style="height:150px;width:auto;" class="img-fluid m-2" />
                            }
                        </div>
                        <div class="input-group mt-3 mb-1">
                            <div class="custom-file m-1">
                                <input type="file" accept="image/*" class="custom-file-input" id="Image1" aria-describedby="inputGroupFileAddon01" name="Image1">
                                <label class="custom-file-label" for="Image1">Featured</label>
                            </div>
                            <button type="button" class="btn alert-danger btn-sm m-1 font-weight-bold" onclick="ClearImage1()">X</button>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div style="min-height:150px;min-height:150px;max-height:150px;max-width:150px;text-align:center;">
                            @if (ProductImages.Count > 1)
                            {
                                <input type="hidden" name="Image2ID" id="Image2ID" value="@ProductImages.Where(P => P.Order == 2).First().Key">
                                <img src="data:image/bmp;base64,@Convert.ToBase64String(ProductImages.Where(P => P.Order == 2).First().Data)" id="Image2Preview" style="height:150px;width:auto;" class="img-fluid m-2" />
                            }
                            else
                            {
                                <input type="hidden" name="Image2ID" id="Image2ID" value="">
                                <img src="~/img/Placeholder.png" id="Image2Preview" style="height:150px;width:auto;" class="img-fluid m-2" />
                            }
                        </div>
                        <div class="input-group mt-3 mb-1">
                            <div class="custom-file m-1">
                                <input type="file" accept="image/*" class="custom-file-input" id="Image2" aria-describedby="inputGroupFileAddon01" name="Image2">
                                <label class="custom-file-label" for="Image2">Image</label>
                            </div>
                            <button type="button" class="btn alert-danger btn-sm m-1 font-weight-bold" onclick="ClearImage2()">X</button>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div style="min-height:150px;min-height:150px;max-height:150px;max-width:150px;text-align:center;">
                            @if (ProductImages.Count > 2)
                            {
                                <input type="hidden" name="Image3ID" id="Image3ID" value="@ProductImages.Where(P => P.Order == 3).First().Key">
                                <img src="data:image/bmp;base64,@Convert.ToBase64String(ProductImages.Where(P => P.Order == 3).First().Data)" id="Image3Preview" style="height:150px;width:auto;" class="img-fluid m-2" />
                            }
                            else
                            {
                                <input type="hidden" name="Image3ID" id="Image3ID" value="">
                                <img src="~/img/Placeholder.png" id="Image3Preview" style="height:150px;width:auto;" class="img-fluid m-2" />
                            }
                        </div>
                        <div class="input-group mt-3 mb-1">
                            <div class="custom-file m-1">
                                <input type="file" accept="image/*" class="custom-file-input" id="Image3" aria-describedby="inputGroupFileAddon01" name="Image3">
                                <label class="custom-file-label" for="Image3">Image</label>
                            </div>
                            <button type="button" class="btn alert-danger btn-sm m-1 font-weight-bold" onclick="ClearImage3()">X</button>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div style="min-height:150px;min-height:150px;max-height:150px;max-width:150px;text-align:center;">
                            @if (ProductImages.Count > 3)
                            {
                                <input type="hidden" name="Image4ID" id="Image4ID" value="@ProductImages.Where(P => P.Order == 4).First().Key">
                                <img src="data:image/bmp;base64,@Convert.ToBase64String(ProductImages.Where(P => P.Order == 4).First().Data)" id="Image4Preview" style="height:150px;width:auto;" class="img-fluid m-2" />
                            }
                            else
                            {
                                <input type="hidden" name="Image4ID" id="Image4ID" value="">
                                <img src="~/img/Placeholder.png" id="Image4Preview" style="height:150px;width:auto;" class="img-fluid m-2" />
                            }
                        </div>
                        <div class="input-group mt-3 mb-1">
                            <div class="custom-file m-1">
                                <input type="file" accept="image/*" class="custom-file-input" id="Image4" aria-describedby="inputGroupFileAddon01" name="Image4">
                                <label class="custom-file-label" for="Image4">Image</label>
                            </div>
                            <button type="button" class="btn alert-danger btn-sm m-1 font-weight-bold" onclick="ClearImage4()">X</button>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-12">
                        <button type="submit" class="btn btn-sm btn-primary w-100">Update Product</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="~/js/jquery.min.js"></script>
<script>$("#Image1").change(function () {
        readURL(this, "#Image1Preview");
    });
    $("#Image2").change(function () {
        readURL(this, "#Image2Preview");
    });
    $("#Image3").change(function () {
        readURL(this, "#Image3Preview");
    });
    $("#Image4").change(function () {
        readURL(this, "#Image4Preview");
    });

    function ClearImage1() {
        $('#Image1Preview').attr('src', '../img/Placeholder.png');
        $('#Image1').val('');
        $('#Image1').attr('required', true);
        var ImageID = $('#Image1ID').val();
        if (ImageID !== '') {
            $('#Image1ID').val('');
            var RemovedImages = document.getElementById("RemovedImages").value;

            if (RemovedImages === "") {
                RemovedImages = RemovedImages + ImageID;
            } else {
                RemovedImages = RemovedImages + "," + ImageID;
            }
            $("#RemovedImages").val(RemovedImages);
        }
    }

    function ClearImage2() {
        $('#Image2Preview').attr('src', '../img/Placeholder.png');
        $('#Image2').val('');
        var ImageID = $('#Image2ID').val();
        if (ImageID !== '') {
            $('#Image2ID').val('');
            var RemovedImages = document.getElementById("RemovedImages").value;

            if (RemovedImages === "") {
                RemovedImages = RemovedImages + ImageID;
            } else {
                RemovedImages = RemovedImages + "," + ImageID;
            }
            $("#RemovedImages").val(RemovedImages);
        }
    }

    function ClearImage3() {
        $('#Image3Preview').attr('src', '../img/Placeholder.png');
        $('#Image3').val('');
        var ImageID = $('#Image3ID').val();
        if (ImageID !== '') {
            $('#Image3ID').val('');
            var RemovedImages = document.getElementById("RemovedImages").value;

            if (RemovedImages === "") {
                RemovedImages = RemovedImages + ImageID;
            } else {
                RemovedImages = RemovedImages + "," + ImageID;
            }
            $("#RemovedImages").val(RemovedImages);
        }
    }

    function ClearImage4() {
        $('#Image4Preview').attr('src', '../img/Placeholder.png');
        $('#Image4').val('');
        var ImageID = $('#Image4ID').val();
        if (ImageID !== '') {
            $('#Image4ID').val('');
            var RemovedImages = document.getElementById("RemovedImages").value;

            if (RemovedImages === "") {
                RemovedImages = RemovedImages + ImageID;
            } else {
                RemovedImages = RemovedImages + "," + ImageID;
            }
            $("#RemovedImages").val(RemovedImages);
        }
    }


    function readURL(input, PreviewName) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $(PreviewName).attr('src', e.target.result);
                $(PreviewName).attr('style', 'min-height:150px;min-height:150px;max-height:150px;max-width:150px;');
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    function AddSpecification() {
        var CurrentCount = parseInt($("#SpecificationCount").val());
        CurrentCount++;
        $("#SpecificationCount").val(CurrentCount);
        $("#ProductSpecifications").append(
            "<div class='row' id='SpecificationRow_" + CurrentCount + "'>" +
            "<input type='hidden' name='ProductSpecificationID_" + CurrentCount + "' value=''>" +
            "<div class='col-md-6'>" +
            "<div class='form-group'>" +
            "<label>Name</label>" +
            "<input type='text' class='form-control' name='SpecificationName_" + CurrentCount + "' placeholder='Name' required />" +
            "</div>" +
            "</div>" +
            "<div class='col-md-6'>" +
            "<div class='form-group'>" +
            "<label>Value</label>" +
            "<input type='text' class='form-control' name='SpecificationValue_" + CurrentCount + "' placeholder='Value' required />" +
            "</div>" +
            "</div>" +
            "</div>")
    }

    function RemoveSpecification() {
        var CurrentCount = parseInt($("#SpecificationCount").val());
        console.log(CurrentCount);
        var RowID = "#SpecificationRow_" + CurrentCount;
        if (!!document.getElementById("ProductSpecificationID_" + CurrentCount)) {
            var SpecificationID = document.getElementById("ProductSpecificationID_" + CurrentCount).value;
            var RemovedSpecifications = document.getElementById("RemovedSpecifications").value;

            if (RemovedSpecifications === "") {
                RemovedSpecifications = RemovedSpecifications + SpecificationID;
            } else {
                RemovedSpecifications = RemovedSpecifications + "," + SpecificationID;
            }
            $("#RemovedSpecifications").val(RemovedSpecifications);
        }

        $(RowID).remove();
        CurrentCount--;
        $("#SpecificationCount").val(CurrentCount);

    }</script>

